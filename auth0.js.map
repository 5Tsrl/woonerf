{"version":3,"sources":["auth0.js"],"names":["AUTH0_CLIENT_ID","process","env","AUTH0_DOMAIN","authIsRequired","defaultLockOptions","auth","params","scope","redirect","closeable","autoclose","getLock","lockOptions"],"mappings":";;;;;;;AAAA;;;;;;AAEA,IAAMA,kBAAkBC,QAAQC,GAAR,CAAYF,eAApC;AACA,IAAMG,eAAeF,QAAQC,GAAR,CAAYC,YAAjC;;AAEO,IAAMC,0CAAiBJ,mBAAmBG,YAA1C;AACA,IAAME,kDAAqB;AAChCC,QAAM;AACJC,YAAQ;AACNC,aAAO;AADD,KADJ;AAIJC,cAAU;AAJN,GAD0B;AAOhCC,aAAW,KAPqB;AAQhCC,aAAW;AARqB,CAA3B;AAUA,IAAMC,4BAAU,SAAVA,OAAU,CAACC,WAAD;AAAA,SAAiB,wBAAcb,eAAd,EAA+BG,YAA/B,EAA6CU,WAA7C,CAAjB;AAAA,CAAhB","file":"auth0.js","sourcesContent":["import Auth0Lock from 'auth0-lock'\n\nconst AUTH0_CLIENT_ID = process.env.AUTH0_CLIENT_ID\nconst AUTH0_DOMAIN = process.env.AUTH0_DOMAIN\n\nexport const authIsRequired = AUTH0_CLIENT_ID && AUTH0_DOMAIN\nexport const defaultLockOptions = {\n  auth: {\n    params: {\n      scope: 'openid analyst offline_access'\n    },\n    redirect: false\n  },\n  closeable: false,\n  autoclose: true\n}\nexport const getLock = (lockOptions) => new Auth0Lock(AUTH0_CLIENT_ID, AUTH0_DOMAIN, lockOptions)\n"]}